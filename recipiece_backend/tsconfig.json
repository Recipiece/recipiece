{
  "compilerOptions": {
    "target": "ESNext",
    "module": "commonjs",
    // "rootDir": "./src",
    "types": ["jest", "node"],
    "sourceMap": true,
    "outDir": "./dist",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true /* Enable all strict type-checking options. */,
    // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    // "strictBuiltinIteratorReturn": true,              /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
    // "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    // "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
    // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "paths": {
      "@recipiece/types": ["../recipiece_common/recipiece_types/src/index.ts"],
      "@recipiece/database": ["../recipiece_common/recipiece_database/src/index.ts"],
      "@recipiece/test": ["../recipiece_common/recipiece_test/src/index.ts"],
      "@recipiece/conversion": ["../recipiece_common/recipiece_conversion/src/index.ts"],
      "@recipiece/constant": ["../recipiece_common/recipiece_constant/src/index.ts"]
    }
  },
  "ts-node": {
    "require": ["tsconfig-paths/register"]
  },
  "exclude": ["node_modules", "dist"],
  "include": [
    "./src/**/*",
    "./test/**/*",
    "./seed/**/*",
    "./jest.config.ts",
    "./jest.setup*.ts",
    "../recipiece_common/recipiece_types/src/**/*",
    "../recipiece_common/recipiece_database/src/**/*",
    "../recipiece_common/recipiece_conversion/src/**/*",
    "../recipiece_common/recipiece_constant/src/**/*"
  ]
}
